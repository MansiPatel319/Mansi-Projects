---
services:
  proxy:
    image: "traefik:v2.7"
    command:
      # - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  traffic:
    build: ./voyage-construction-frontend
    volumes:
      - ./voyage-construction-frontend:/app
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - ENV=staging
      - REACT_APP_DEVELOPMENT_BASE_URL=http://local-app.voyagecontrol.com
      - REACT_APP_SIGNATURE_KEY=duv6ngxgva1xc0nw
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=90"
      - "traefik.http.routers.web.rule=Host(`local-app.voyagecontrol.com`)"
    depends_on:
      - proxy
    command: bash -c "npm install --location=global npm && npm install && npm run build && bash ./docker/run.sh"

  admin:
    build: ./voyage-construction-admin
    volumes:
      - ./voyage-construction-admin:/app
    ports:
      - 3010:3000
    environment:
      - NODE_ENV=production
      - ENV=staging
      - REACT_APP_AUTH_API_URL=https://local-app.voyagecontrol.com/api/auth/
      - REACT_APP_REST_API_URL=https://local-app.voyagecontrol.com/api/v1/
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.admin.loadbalancer.server.port=3000"
      - "traefik.http.routers.admin.rule=Host(`local-admin.voyagecontrol.com`)"
    depends_on:
      - proxy
    command: bash -c "npm install --location=global npm && npm i -g typescript@4.6.4 jest@28.0.3 tslint@6.1.3 && npm install && npm cache clean --force && tsc && bash ./docker/run.sh"

  rest-api:
    build: ./voyage-construction-api
    volumes:
      - ./voyage-construction-api:/app
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=settings.staging
      - ENV=staging
      - DB_HOST=rest-api-db
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB=voyagecontrol
      - NONCE_KEY=KEY-2481a9bb-5d0a-47da-b779-b78b9b261e9f
      - SIGNATURE_KEY=duv6ngxgva1xc0nw
      - SENDGRID_API_KEY=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
      - USER_INVITE_TEMPLATE=d-d54a17dc65a74fd0ad6403a871f9a4c7
      - EMAIL_USER=noreply@voyagecontrol.com
      - ROLE_ASSIGNED_TEMPLATE=d-0846cec5162c4071a230decdae1a660b
      - PASSWORD_RESET_TEMPLATE=d-562a241deee840bfaca40358104f2a0f
      - AUTH_API_URL=http://auth-api:8000/api/auth/
      - AUTH_API_USER=auth@voyagecontrol.com
      - AUTH_API_PASS=6euTD0dZO44bgJu
    depends_on:
      - rest-api-db
      - proxy
      - auth-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=90"
      - "traefik.http.routers.api.rule=Host(`local-app.voyagecontrol.com`) && PathPrefix(`/api/v1/`)"
    command: bash -c "pipenv install --verbose --system && python manage.py collectstatic --noinput && bash ./docker/run.sh"

  rest-api-db:
    image: postgres:14.4-bullseye
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=voyagecontrol
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5434:5432"
    volumes:
      - rest-api-db:/var/lib/postgresql/data
    depends_on:
      - pgadmin

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin

  auth-api:
    build: ./voyage-authentication-api
    ports:
      - 8010:8000
    volumes:
      - ./voyage-authentication-api:/app
    environment:
      - ENV=staging
      - PORT=8000
      - DJANGO_SETTINGS_MODULE=api.settings.staging
      - DATABASE_URL=psql://root:root@auth-api-db:5432/auth
    depends_on:
      - auth-api-db
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.auth.loadbalancer.server.port=90"
      - "traefik.http.routers.auth.rule=Host(`local-app.voyagecontrol.com`) && PathPrefix(`/api/auth/`)"
    command: bash -c "pip install --upgrade pip && pip install uvicorn gunicorn &&  pip install -r requirements.txt && python manage.py check && python manage.py collectstatic --noinput && bash  ./docker/run.sh"

  auth-api-db:
    image: postgres:14.4-bullseye
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=auth
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5433:5432"
    volumes:
      - auth-api-db:/var/lib/postgresql/data
    depends_on:
      - pgadmin

volumes:
  rest-api-db:
  auth-api-db:
  pgadmin:
